import json
import random
import time

from AWSIoTPythonSDK.MQTTLib import AWSIoTMQTTClient

# AWS IoT Core endpoint
iot_endpoint = "REPLACE_HERE"  # Replace with your AWS IoT Endpoint URL, use command: aws iot describe-endpoint --endpoint-type iot:Data-ATS

# AWS IoT Thing Name
thing_name = "cloudExploitationThing"

# Path to the certificates and private key in the same folder as the script
cert_path = "./certificate.pem.crt"
key_path = "./private.pem.key"
root_ca_path = "./AmazonRootCA1.pem"

# Initialize AWS IoT MQTT Client
mqtt_client = AWSIoTMQTTClient(thing_name)
mqtt_client.configureEndpoint(iot_endpoint, 8883)
mqtt_client.configureCredentials(root_ca_path, key_path, cert_path)

# Connect to AWS IoT
mqtt_client.connect()


def generate_metrics_data():
    # Ensure this message content always exceeds 100 bytes.
    message_content = "This message is crafted to be larger than 100 bytes for demonstration purposes. Extra content here."

    return {
        "Message": message_content,
        "SourceIP": f"192.168.{random.randint(101,254)}.{random.randint(0,254)}",  # Simulating random source IP outside CIDR 192.168.100.14/24
    }


# Infinite loop to publish metrics data
while True:
    metrics_data = generate_metrics_data()
    mqtt_client.publish(
        "/awsiotbook/deviceDefender/cloudExploitationMetrics",
        json.dumps(metrics_data),
        1,
    )
    print(f"Published: {json.dumps(metrics_data)}")
    time.sleep(10)  # Send message every 10 seconds
